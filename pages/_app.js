import Head from "next/head";
import Script from "next/script";
import "bootstrap/dist/css/bootstrap.min.css";
import "antd/dist/antd.css"; // or 'antd/dist/antd.less'
import "../styles/globals.css";
import "../styles/darkMode.scss";
import "../styles/VisaCard.scss";
import "../styles/Visa.scss";
import "../styles/utils.css";
import "../styles/safqaTable.css";
import "../styles/docs/customAntd.scss";
import "../styles/Dashboard/accountApproval/identity_documentation.scss";
import Layout from "./../comps/Layout";
import { useEffect, useState } from "react";
import { store } from "../store";
import { Provider, useDispatch } from "react-redux";
import { useTranslation } from "react-i18next";
import { i18n } from "../comps/i18n";
import { getCookie, setCookie } from "cookies-next";
import { useRouter } from "next/router";
import Aos from "aos";
// import "aos/dist/aos.css";
import { NotifyMessage } from "../comps/Messages";
import { Cairo } from "@next/font/google";

const cairo = Cairo({
  subsets: ["arabic"],
  weight: ["500"],
});

function MyApp({ Component, pageProps }) {
  const router = useRouter();
  const { pathname } = router;
  const [t, i18n] = useTranslation();
  const { language } = i18n;
  const lang = getCookie("language") || "en";
  const [domLoaded, setDomLoaded] = useState(false);

  useEffect(() => {
    Aos.init({ once: true });
    setDomLoaded(true);
  }, []);

  useEffect(() => {
    setCookie("language", lang);
    i18n.changeLanguage(lang);
  }, [i18n, lang]);

  return (
    <>
      <Head>
        <title>SAFQA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.png" />
      </Head>

      {/* <Script
        id="bootstrap-cdn"
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
        async
      /> */}
      <Script
        id="lottie-player-cdn"
        src="https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js"
        // async
      />

      {domLoaded && (
        <>
          <Provider store={store}>
            {Component.getLayout ? (
              Component.getLayout(
                <main className={language}>
                  <Component {...pageProps} />
                </main>
              )
            ) : (
              <main className={language}>
                <Layout>
                  <Component {...pageProps} />
                </Layout>
              </main>
            )}
          </Provider>
        </>
      )}
    </>
  );
}

export default MyApp;
